#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000001a2b8255ff0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001a2b8256180 .scope module, "alu_tb" "alu_tb" 3 1;
 .timescale 0 0;
v000001a2b8264270_0 .net "alu_o", 7 0, v000001a2b7fdea80_0;  1 drivers
v000001a2b8264310_0 .var "data_a_i", 7 0;
v000001a2b82643b0_0 .var "data_b_i", 7 0;
v000001a2b8264450_0 .var "op_i", 2 0;
S_000001a2b7fde760 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 13, 3 13 0, S_000001a2b8256180;
 .timescale 0 0;
v000001a2b8256310_0 .var/2s "i", 31 0;
S_000001a2b7fde8f0 .scope module, "alu1" "alu" 3 10, 4 1 0, S_000001a2b8256180;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "data_a_i";
    .port_info 1 /INPUT 8 "data_b_i";
    .port_info 2 /INPUT 3 "op_i";
    .port_info 3 /OUTPUT 8 "alu_o";
P_000001a2b82639c0 .param/l "ADD" 1 4 21, C4<000>;
P_000001a2b82639f8 .param/l "AND" 1 4 25, C4<100>;
P_000001a2b8263a30 .param/l "EQL" 1 4 28, C4<111>;
P_000001a2b8263a68 .param/l "LSR" 1 4 24, C4<011>;
P_000001a2b8263aa0 .param/l "OR" 1 4 26, C4<101>;
P_000001a2b8263ad8 .param/l "SLL" 1 4 23, C4<010>;
P_000001a2b8263b10 .param/l "SUB" 1 4 22, C4<001>;
P_000001a2b8263b48 .param/l "XOR" 1 4 27, C4<110>;
v000001a2b7fdea80_0 .var "alu_o", 7 0;
v000001a2b7fdeb20_0 .net "data_a_i", 7 0, v000001a2b8264310_0;  1 drivers
v000001a2b8263d20_0 .net "data_b_i", 7 0, v000001a2b82643b0_0;  1 drivers
v000001a2b8263dc0_0 .net "op_i", 2 0, v000001a2b8264450_0;  1 drivers
E_000001a2b7fd9060 .event anyedge, v000001a2b8263d20_0, v000001a2b7fdeb20_0, v000001a2b8263dc0_0;
S_000001a2b8263b90 .scope begin, "ALU_logic" "ALU_logic" 4 30, 4 30 0, S_000001a2b7fde8f0;
 .timescale 0 0;
    .scope S_000001a2b7fde8f0;
T_0 ;
    %wait E_000001a2b7fd9060;
    %fork t_1, S_000001a2b8263b90;
    %jmp t_0;
    .scope S_000001a2b8263b90;
t_1 ;
    %load/vec4 v000001a2b8263dc0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 3;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 3;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 3;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 3;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 3;
    %cmp/u;
    %jmp/1 T_0.5, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 3;
    %cmp/u;
    %jmp/1 T_0.6, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 3;
    %cmp/u;
    %jmp/1 T_0.7, 6;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.0 ;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %add;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.1 ;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %sub;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.2 ;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %parti/s 3, 0, 2;
    %ix/vec4 4;
    %shiftl 4;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.3 ;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %parti/s 3, 0, 2;
    %ix/vec4 4;
    %shiftr 4;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.4 ;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %and;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.5 ;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %or;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.6 ;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %xor;
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.7 ;
    %pushi/vec4 0, 0, 7;
    %load/vec4 v000001a2b7fdeb20_0;
    %load/vec4 v000001a2b8263d20_0;
    %cmp/e;
    %flag_get/vec4 4;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v000001a2b7fdea80_0, 0, 8;
    %jmp T_0.9;
T_0.9 ;
    %pop/vec4 1;
    %end;
    .scope S_000001a2b7fde8f0;
t_0 %join;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_000001a2b8256180;
T_1 ;
    %fork t_3, S_000001a2b7fde760;
    %jmp t_2;
    .scope S_000001a2b7fde760;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a2b8256310_0, 0, 32;
T_1.0 ;
    %load/vec4 v000001a2b8256310_0;
    %cmpi/s 10, 0, 32;
    %jmp/0xz T_1.1, 5;
    %vpi_func 3 14 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 8'b11111111 {0 0 0};
    %pad/u 8;
    %store/vec4 v000001a2b8264310_0, 0, 8;
    %vpi_func 3 15 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 8'b11111111 {0 0 0};
    %pad/u 8;
    %store/vec4 v000001a2b82643b0_0, 0, 8;
    %vpi_func 3 16 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 3'b111 {0 0 0};
    %pad/u 3;
    %store/vec4 v000001a2b8264450_0, 0, 3;
    %delay 1, 0;
    %vpi_call/w 3 18 "$display", "data_a_i=%d data_b_i=%d op_i=%d, alu_o=%d", v000001a2b8264310_0, v000001a2b82643b0_0, v000001a2b8264450_0, v000001a2b8264270_0 {0 0 0};
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a2b8256310_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a2b8256310_0, 0, 32;
    %jmp T_1.0;
T_1.1 ;
    %end;
    .scope S_000001a2b8256180;
t_2 %join;
    %vpi_call/w 3 20 "$finish" {0 0 0};
    %end;
    .thread T_1;
    .scope S_000001a2b8256180;
T_2 ;
    %vpi_call/w 3 26 "$dumpfile", "test.vcd" {0 0 0};
    %vpi_call/w 3 27 "$dumpvars", 32'sb00000000000000000000000000000000, S_000001a2b8256180 {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    ".\alu_tb.sv";
    ".\alu.sv";
